openapi: "3.0.3"
info:
  title: "companyservice API"
  description: "companyservice API"
  version: "1.0.0"
servers:
  - url: "https://companyservice"
paths:
  /api/companies/{id}:
    get:
      summary: "GET api/companies/{id}"
      operationId: "getCompany"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
    put:
      summary: "PUT api/companies/{id}"
      operationId: "updateCompany"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Company"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
  /api/companies/byEmail/{email}:
    get:
      summary: "GET api/companies/byEmail/{email}"
      operationId: "getCompany"
      parameters:
        - name: "email"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
    put:
      summary: "PUT api/companies/byEmail/{email}"
      operationId: "updateCompany"
      parameters:
        - name: "email"
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Company"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
  /api/companies/register:
    post:
      summary: "POST api/companies/register"
      operationId: "registerCompany"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Company"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
components:
  schemas:
    HttpHeaders:
      type: "object"
      properties: { }
    ResponseEntity:
      type: "object"
      properties:
        headers:
          $ref: "#/components/schemas/HttpHeaders"
    Job:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        title:
          type: "string"
        location:
          type: "string"
        description:
          type: "string"
        jobType:
          type: "string"
          enum:
            - "FRONTEND"
            - "BACKEND"
            - "FULLSTACK"
            - "ARCHITECT"
            - "DEVOPS"
            - "QA"
            - "MANAGER"
            - "OTHER"
        salary:
          type: "number"
          format: "double"
        createdAt:
          type: "string"
          format: "date-time"
        updatedAt:
          type: "string"
          format: "date-time"
        expiresAt:
          type: "string"
          format: "date-time"
        company:
          $ref: "#/components/schemas/Company"
    Company:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        email:
          type: "string"
        website:
          type: "string"
        phone:
          type: "integer"
          format: "int32"
        createdAt:
          type: "string"
          format: "date-time"
        updatedAt:
          type: "string"
          format: "date-time"
        jobs:
          type: "array"
          items:
            $ref: "#/components/schemas/Job"